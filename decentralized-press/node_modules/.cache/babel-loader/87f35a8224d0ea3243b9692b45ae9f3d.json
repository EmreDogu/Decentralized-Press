{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport getContract from \"./utilities/getContract\";\nimport News from './artifacts/contracts/News.sol/News.json';\nexport default function Writing() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  const handleSubmit = async () => {\n    if (title === \"\" || description === \"\" || image === \"\") {\n      alert(\"All the fields must be filled!\");\n      return;\n    } else {\n      saveFeed();\n    }\n  };\n\n  const saveFeed = async () => {\n    alert(\"Saving Feed...\");\n    console.log(title, description, image);\n\n    try {\n      const contract = await getContract();\n      const UploadedDate = String(new Date());\n      /*\r\n       * Save the new feed to the blockchain\r\n       */\n\n      await contract.createFeed(title, description, image, UploadedDate);\n      success(\"Feed Saved Successfully\"); // reset form\n\n      setTitle(\"\");\n      setDescription(\"\");\n      setCategory(\"\");\n      setLocation(\"\");\n      setCoverImage(\"\"); // Redirect to Home Page\n\n      window.location.href = \"/\";\n    } catch (err) {\n      console.log(err);\n      error(\"Error Saving Feed\");\n    }\n  };\n}\n\n_s(Writing, \"kFUBQOacYDHoh62NNIu+xw9zIhg=\");\n\n_c = Writing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Writing\");","map":{"version":3,"names":["React","useState","useRef","getContract","News","Writing","title","setTitle","description","setDescription","image","setImage","handleSubmit","alert","saveFeed","console","log","contract","UploadedDate","String","Date","createFeed","success","setCategory","setLocation","setCoverImage","window","location","href","err","error"],"sources":["C:/Users/Emre/Desktop/Decentralized-Press/decentralized-press/src/WritingPage.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport getContract from \"./utilities/getContract\";\r\nimport News from './artifacts/contracts/News.sol/News.json'\r\n\r\nexport default function Writing() {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const handleSubmit = async () => {\r\n        if (\r\n          title === \"\" ||\r\n          description === \"\" ||\r\n          image === \"\"\r\n        ) {\r\n          alert(\"All the fields must be filled!\");\r\n          return;\r\n        }else {\r\n            saveFeed();\r\n        }\r\n    };\r\n\r\n    const saveFeed = async () => {\r\n        alert(\"Saving Feed...\");\r\n    \r\n        console.log(title, description, image);\r\n    \r\n        try {\r\n          const contract = await getContract();\r\n          const UploadedDate = String(new Date());\r\n    \r\n          /*\r\n           * Save the new feed to the blockchain\r\n           */\r\n          await contract.createFeed(\r\n            title,\r\n            description,\r\n            image,\r\n            UploadedDate\r\n          );\r\n    \r\n          success(\"Feed Saved Successfully\");\r\n    \r\n          // reset form\r\n          setTitle(\"\");\r\n          setDescription(\"\");\r\n          setCategory(\"\");\r\n          setLocation(\"\");\r\n          setCoverImage(\"\");\r\n    \r\n          // Redirect to Home Page\r\n          window.location.href = \"/\";\r\n        } catch (err) {\r\n          console.log(err);\r\n          error(\"Error Saving Feed\");\r\n        }\r\n      };\r\n    \r\n}"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,OAAOC,IAAP,MAAiB,0CAAjB;AAEA,eAAe,SAASC,OAAT,GAAmB;EAAA;;EAC9B,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;EAEA,MAAMW,YAAY,GAAG,YAAY;IAC7B,IACEN,KAAK,KAAK,EAAV,IACAE,WAAW,KAAK,EADhB,IAEAE,KAAK,KAAK,EAHZ,EAIE;MACAG,KAAK,CAAC,gCAAD,CAAL;MACA;IACD,CAPD,MAOM;MACFC,QAAQ;IACX;EACJ,CAXD;;EAaA,MAAMA,QAAQ,GAAG,YAAY;IACzBD,KAAK,CAAC,gBAAD,CAAL;IAEAE,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBE,WAAnB,EAAgCE,KAAhC;;IAEA,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMd,WAAW,EAAlC;MACA,MAAMe,YAAY,GAAGC,MAAM,CAAC,IAAIC,IAAJ,EAAD,CAA3B;MAEA;AACV;AACA;;MACU,MAAMH,QAAQ,CAACI,UAAT,CACJf,KADI,EAEJE,WAFI,EAGJE,KAHI,EAIJQ,YAJI,CAAN;MAOAI,OAAO,CAAC,yBAAD,CAAP,CAdE,CAgBF;;MACAf,QAAQ,CAAC,EAAD,CAAR;MACAE,cAAc,CAAC,EAAD,CAAd;MACAc,WAAW,CAAC,EAAD,CAAX;MACAC,WAAW,CAAC,EAAD,CAAX;MACAC,aAAa,CAAC,EAAD,CAAb,CArBE,CAuBF;;MACAC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;IACD,CAzBD,CAyBE,OAAOC,GAAP,EAAY;MACZd,OAAO,CAACC,GAAR,CAAYa,GAAZ;MACAC,KAAK,CAAC,mBAAD,CAAL;IACD;EACF,CAlCH;AAoCH;;GAtDuBzB,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}