{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emre\\\\Desktop\\\\Decentralized-Press\\\\decentralized-press\\\\src\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { Link } from \"react-router-dom\";\nimport getContract from \"./utilities/getContract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // store greeting in local state\n  const [New, setNewValue] = useState(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } // call the smart contract, read the current greeting value\n\n\n  async function fetchNew() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []);\n      const contract = await getContract();\n\n      try {\n        const data = await contract.getAllNews();\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchNew,\n        children: \"Fetch New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/writing\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Write a New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setNewValue(e.target.value),\n        placeholder: \"Set new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QCUG04YlkU2c0NKxt3fjRkPJ2/Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","Link","getContract","App","New","setNewValue","requestAccount","window","ethereum","request","method","fetchNew","provider","providers","Web3Provider","send","contract","data","getAllNews","console","log","err","e","target","value"],"sources":["C:/Users/Emre/Desktop/Decentralized-Press/decentralized-press/src/HomePage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { ethers } from 'ethers'\r\nimport { Link } from \"react-router-dom\";\r\nimport getContract from \"./utilities/getContract\";\r\n\r\nfunction App() {\r\n  // store greeting in local state\r\n  const [New, setNewValue] = useState()\r\n\r\n  // request access to the user's MetaMask account\r\n  async function requestAccount() {\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n  }\r\n\r\n  // call the smart contract, read the current greeting value\r\n  async function fetchNew() {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      await provider.send('eth_requestAccounts', []);\r\n      const contract = await getContract();\r\n      try {\r\n        const data = await contract.getAllNews();\r\n        console.log('data: ', data);\r\n      } catch (err) {\r\n        console.log(\"Error: \", err);\r\n      }\r\n    }    \r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <button onClick={fetchNew}>Fetch New</button>\r\n        <Link to=\"/writing\">\r\n          <button>Write a New</button>\r\n        </Link>\r\n        <input onChange={e => setNewValue(e.target.value)} placeholder=\"Set new\" />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,GAAD,EAAMC,WAAN,IAAqBP,QAAQ,EAAnC,CAFa,CAIb;;EACA,eAAeQ,cAAf,GAAgC;IAC9B,MAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB,CAAN;EACD,CAPY,CASb;;;EACA,eAAeC,QAAf,GAA0B;IACxB,IAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;MAC1C,MAAMI,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;MACA,MAAMI,QAAQ,CAACG,IAAT,CAAc,qBAAd,EAAqC,EAArC,CAAN;MACA,MAAMC,QAAQ,GAAG,MAAMd,WAAW,EAAlC;;MACA,IAAI;QACF,MAAMe,IAAI,GAAG,MAAMD,QAAQ,CAACE,UAAT,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,IAAtB;MACD,CAHD,CAGE,OAAOI,GAAP,EAAY;QACZF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,GAAvB;MACD;IACF;EACF;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAAA,wBACE;QAAQ,OAAO,EAAEV,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,IAAD;QAAM,EAAE,EAAC,UAAT;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF,eAKE;QAAO,QAAQ,EAAEW,CAAC,IAAIjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;QAAmD,WAAW,EAAC;MAA/D;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAnCQrB,G;;KAAAA,G;AAqCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}