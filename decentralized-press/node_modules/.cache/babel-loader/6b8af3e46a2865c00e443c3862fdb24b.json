{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emre\\\\Desktop\\\\Decentralized-Press\\\\decentralized-press\\\\src\\\\VotingPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Header } from \"./components/Header\";\nimport { Link } from \"react-router-dom\";\nimport NewsList from \"./components/NewsList\";\nimport getContract from \"./utilities/getContract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [news, setNews] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      const accounts = await ethereum.request({\n        method: \"eth_accounts\"\n      });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        setCurrentAccount(account);\n        alert(\"Wallet is Connected!\");\n      } else {\n        alert(\"To write or vote a new, Ensure your wallet Connected!\");\n      }\n    } catch (err) {\n      console.log(`${err.message}`);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Make sure you have MetaMask Connected\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(`${err.message}`);\n    }\n  };\n\n  const getNews = async () => {\n    try {\n      const contract = await getContract();\n      const AllNews = await contract.getAllNews();\n      let unvotedNews = [];\n\n      for (let i = 0; i < AllNews.length; ++i) {\n        if (!AllNews[i].voted) {\n          unvotedNews.push(AllNews[i]);\n        }\n      }\n\n      const formattedNew = unvotedNews.map(New => {\n        return {\n          id: New.id,\n          title: New.title,\n          description: New.description,\n          image: New.image,\n          author: New.author,\n          date: new Date(New.date * 1000)\n        };\n      });\n      setNews(formattedNew);\n    } catch (err) {\n      console.log(`${err.message}`);\n    }\n  };\n\n  useEffect(() => {\n    getNews();\n    checkIfWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        currentAccount: currentAccount,\n        connectWallet: connectWallet\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: news.map((New, index) => {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            to: `/voting?id=${New.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(NewsList, {\n                New: New\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qr5FUdZgfQApJFOBSxYaY1E94qc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Link","NewsList","getContract","App","news","setNews","currentAccount","setCurrentAccount","checkIfWalletIsConnected","ethereum","window","accounts","request","method","length","account","alert","err","console","log","message","connectWallet","getNews","contract","AllNews","getAllNews","unvotedNews","i","voted","push","formattedNew","map","New","id","title","description","image","author","date","Date","index"],"sources":["C:/Users/Emre/Desktop/Decentralized-Press/decentralized-press/src/VotingPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Header } from \"./components/Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NewsList from \"./components/NewsList\";\r\nimport getContract from \"./utilities/getContract\";\r\n\r\nfunction App() {\r\n  const [news, setNews] = useState([]);\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n      if (accounts.length !== 0) {\r\n        const account = accounts[0];\r\n        setCurrentAccount(account);\r\n        alert(\"Wallet is Connected!\");\r\n      } else {\r\n        alert(\"To write or vote a new, Ensure your wallet Connected!\");\r\n      }\r\n    } catch (err) {\r\n      console.log(`${err.message}`);\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        alert(\"Make sure you have MetaMask Connected\");\r\n        return;\r\n      }\r\n\r\n      const accounts = await ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      setCurrentAccount(accounts[0]);\r\n    } catch (err) {\r\n      console.log(`${err.message}`);\r\n    }\r\n  };\r\n\r\n  const getNews = async () => {\r\n    try {\r\n      const contract = await getContract();\r\n      const AllNews = await contract.getAllNews();\r\n        let unvotedNews = [];\r\n      for (let i=0; i < AllNews.length; ++i) {\r\n        if (!AllNews[i].voted) {\r\n            unvotedNews.push(AllNews[i]);\r\n        }\r\n    }\r\n\r\n      const formattedNew = unvotedNews.map((New) => {\r\n        return {\r\n          id: New.id,\r\n          title: New.title,\r\n          description: New.description,\r\n          image: New.image,\r\n          author: New.author,\r\n          date: new Date(New.date * 1000),\r\n        };\r\n      });\r\n      setNews(formattedNew);\r\n    } catch (err) {\r\n      console.log(`${err.message}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNews();\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <Header\r\n          currentAccount={currentAccount}\r\n          connectWallet={connectWallet}\r\n        />\r\n        <div>\r\n          {news.map((New, index) => {\r\n            return (\r\n              <Link to={`/voting?id=${New.id}`} key={index}>\r\n                <div>\r\n                  <NewsList New={New} />\r\n                </div>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module"}