{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emre\\\\Desktop\\\\Decentralized-Press\\\\decentralized-press\\\\src\\\\HomePage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport News from './artifacts/contracts/News.sol/News.json'; // Update with the contract address logged out to the CLI when it was deployed \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst newAddress = \"0x5FC8d32690cc91D4c39d9d3abcBD16989F875707\";\n\nfunction App() {\n  _s();\n\n  // store greeting in local state\n  const [New, setNewValue] = useState(); // request access to the user's MetaMask account\n\n  async function requestAccount() {\n    await window.ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n  } // call the smart contract, read the current greeting value\n\n\n  async function fetchNew() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(newAddress, News.abi, provider);\n\n      try {\n        const data = await contract.data(1);\n        console.log('data: ', data);\n      } catch (err) {\n        console.log(\"Error: \", err);\n      }\n    }\n  } // call the smart contract, send an update\n\n\n  async function setNew() {\n    if (!New) return;\n\n    if (typeof window.ethereum !== 'undefined') {\n      await requestAccount();\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(newAddress, News.abi, signer);\n      const transaction = await contract.setNew(New);\n      await transaction.wait();\n      fetchNew();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchNew,\n        children: \"Fetch New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setNew,\n        children: \"Set New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setNewValue(e.target.value),\n        placeholder: \"Set new\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QCUG04YlkU2c0NKxt3fjRkPJ2/Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","ethers","News","newAddress","App","New","setNewValue","requestAccount","window","ethereum","request","method","fetchNew","provider","providers","Web3Provider","contract","Contract","abi","data","console","log","err","setNew","signer","getSigner","transaction","wait","e","target","value"],"sources":["C:/Users/Emre/Desktop/Decentralized-Press/decentralized-press/src/HomePage.js"],"sourcesContent":["import { useState } from 'react';\r\nimport { ethers } from 'ethers'\r\nimport News from './artifacts/contracts/News.sol/News.json'\r\n\r\n// Update with the contract address logged out to the CLI when it was deployed \r\nconst newAddress = \"0x5FC8d32690cc91D4c39d9d3abcBD16989F875707\"\r\n\r\nfunction App() {\r\n  // store greeting in local state\r\n  const [New, setNewValue] = useState()\r\n\r\n  // request access to the user's MetaMask account\r\n  async function requestAccount() {\r\n    await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n  }\r\n\r\n  // call the smart contract, read the current greeting value\r\n  async function fetchNew() {\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum)\r\n      const contract = new ethers.Contract(newAddress, News.abi, provider)\r\n      try {\r\n        const data = await contract.data(1)\r\n        console.log('data: ', data)\r\n      } catch (err) {\r\n        console.log(\"Error: \", err)\r\n      }\r\n    }    \r\n  }\r\n\r\n  // call the smart contract, send an update\r\n  async function setNew() {\r\n    if (!New) return\r\n    if (typeof window.ethereum !== 'undefined') {\r\n      await requestAccount()\r\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n      const signer = provider.getSigner()\r\n      const contract = new ethers.Contract(newAddress, News.abi, signer)\r\n      const transaction = await contract.setNew(New)\r\n      await transaction.wait()\r\n      fetchNew()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <button onClick={fetchNew}>Fetch New</button>\r\n        <button onClick={setNew}>Set New</button>\r\n        <input onChange={e => setNewValue(e.target.value)} placeholder=\"Set new\" />\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,IAAP,MAAiB,0CAAjB,C,CAEA;;;AACA,MAAMC,UAAU,GAAG,4CAAnB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb;EACA,MAAM,CAACC,GAAD,EAAMC,WAAN,IAAqBN,QAAQ,EAAnC,CAFa,CAIb;;EACA,eAAeO,cAAf,GAAgC;IAC9B,MAAMC,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB,CAAN;EACD,CAPY,CASb;;;EACA,eAAeC,QAAf,GAA0B;IACxB,IAAI,OAAOJ,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;MAC1C,MAAMI,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;MACA,MAAMO,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBd,UAApB,EAAgCD,IAAI,CAACgB,GAArC,EAA0CL,QAA1C,CAAjB;;MACA,IAAI;QACF,MAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,CAAc,CAAd,CAAnB;QACAC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;MACD,CAHD,CAGE,OAAOG,GAAP,EAAY;QACZF,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,GAAvB;MACD;IACF;EACF,CArBY,CAuBb;;;EACA,eAAeC,MAAf,GAAwB;IACtB,IAAI,CAAClB,GAAL,EAAU;;IACV,IAAI,OAAOG,MAAM,CAACC,QAAd,KAA2B,WAA/B,EAA4C;MAC1C,MAAMF,cAAc,EAApB;MACA,MAAMM,QAAQ,GAAG,IAAIZ,MAAM,CAACa,SAAP,CAAiBC,YAArB,CAAkCP,MAAM,CAACC,QAAzC,CAAjB;MACA,MAAMe,MAAM,GAAGX,QAAQ,CAACY,SAAT,EAAf;MACA,MAAMT,QAAQ,GAAG,IAAIf,MAAM,CAACgB,QAAX,CAAoBd,UAApB,EAAgCD,IAAI,CAACgB,GAArC,EAA0CM,MAA1C,CAAjB;MACA,MAAME,WAAW,GAAG,MAAMV,QAAQ,CAACO,MAAT,CAAgBlB,GAAhB,CAA1B;MACA,MAAMqB,WAAW,CAACC,IAAZ,EAAN;MACAf,QAAQ;IACT;EACF;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAQ,SAAS,EAAC,YAAlB;MAAA,wBACE;QAAQ,OAAO,EAAEA,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEW,MAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAO,QAAQ,EAAEK,CAAC,IAAItB,WAAW,CAACsB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjC;QAAmD,WAAW,EAAC;MAA/D;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GA9CQ1B,G;;KAAAA,G;AAgDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}