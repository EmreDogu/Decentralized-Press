{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emre\\\\Desktop\\\\Decentralized-Press\\\\decentralized-press\\\\src\\\\VotingPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { Header } from \"./components/Header\";\nimport { Link } from \"react-router-dom\";\nimport NewsList from \"./components/NewsList\";\nimport getContract from \"./utilities/getContract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [news, setNews] = useState([]);\n  const [currentAccount, setCurrentAccount] = useState(\"\");\n\n  const checkIfWalletIsConnected = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n      const accounts = await ethereum.request({\n        method: \"eth_accounts\"\n      });\n\n      if (accounts.length !== 0) {\n        const account = accounts[0];\n        setCurrentAccount(account);\n        alert(\"Wallet is Connected!\");\n      } else {\n        alert(\"To write or vote a new, Ensure your wallet Connected!\");\n      }\n    } catch (err) {\n      console.log(`${err.message}`);\n    }\n  };\n\n  const connectWallet = async () => {\n    try {\n      const {\n        ethereum\n      } = window;\n\n      if (!ethereum) {\n        alert(\"Make sure you have MetaMask Connected\");\n        return;\n      }\n\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(`${err.message}`);\n    }\n  };\n\n  const getNews = async () => {\n    try {\n      const contract = await getContract();\n      const AllNews = await contract.getAllNews();\n      let unvotedNews = [];\n\n      for (let i = 0; i < AllNews.length; ++i) {\n        if (!AllNews[i].voted && !AllNews[i].voters.includes(currentAccount)) {\n          console.log(AllNews[i].voters.toLowerCase());\n          unvotedNews.push(AllNews[i]);\n        }\n      }\n\n      const formattedNew = unvotedNews.map(New => {\n        return {\n          id: New.id,\n          title: New.title,\n          description: New.description,\n          image: New.image,\n          author: New.author,\n          date: new Date(New.date * 1000)\n        };\n      });\n      setNews(formattedNew);\n    } catch (err) {\n      console.log(`${err.message}`);\n    }\n  };\n\n  useEffect(() => {\n    checkIfWalletIsConnected();\n    getNews();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      currentAccount: currentAccount,\n      connectWallet: connectWallet\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: news.map((New, index) => {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/unvotedNew?id=${New.id}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(NewsList, {\n              New: New\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"qr5FUdZgfQApJFOBSxYaY1E94qc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Link","NewsList","getContract","App","news","setNews","currentAccount","setCurrentAccount","checkIfWalletIsConnected","ethereum","window","accounts","request","method","length","account","alert","err","console","log","message","connectWallet","getNews","contract","AllNews","getAllNews","unvotedNews","i","voted","voters","includes","toLowerCase","push","formattedNew","map","New","id","title","description","image","author","date","Date","index"],"sources":["C:/Users/Emre/Desktop/Decentralized-Press/decentralized-press/src/VotingPage.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { Header } from \"./components/Header\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NewsList from \"./components/NewsList\";\r\nimport getContract from \"./utilities/getContract\";\r\n\r\nfunction App() {\r\n    const [news, setNews] = useState([]);\r\n    const [currentAccount, setCurrentAccount] = useState(\"\");\r\n\r\n    const checkIfWalletIsConnected = async () => {\r\n        try {\r\n            const { ethereum } = window;\r\n\r\n            const accounts = await ethereum.request({ method: \"eth_accounts\" });\r\n\r\n            if (accounts.length !== 0) {\r\n                const account = accounts[0];\r\n                setCurrentAccount(account);\r\n                alert(\"Wallet is Connected!\");\r\n            } else {\r\n                alert(\"To write or vote a new, Ensure your wallet Connected!\");\r\n            }\r\n        } catch (err) {\r\n            console.log(`${err.message}`);\r\n        }\r\n    };\r\n\r\n    const connectWallet = async () => {\r\n        try {\r\n            const { ethereum } = window;\r\n\r\n            if (!ethereum) {\r\n                alert(\"Make sure you have MetaMask Connected\");\r\n                return;\r\n            }\r\n\r\n            const accounts = await ethereum.request({\r\n                method: \"eth_requestAccounts\",\r\n            });\r\n            setCurrentAccount(accounts[0]);\r\n        } catch (err) {\r\n            console.log(`${err.message}`);\r\n        }\r\n    };\r\n\r\n    const getNews = async () => {\r\n        try {\r\n            const contract = await getContract();\r\n            const AllNews = await contract.getAllNews();\r\n            let unvotedNews = [];\r\n            \r\n            for (let i = 0; i < AllNews.length; ++i) {\r\n                if (!AllNews[i].voted && !AllNews[i].voters.includes(currentAccount)) {\r\n                    console.log(AllNews[i].voters.toLowerCase());\r\n                    unvotedNews.push(AllNews[i]);\r\n                }\r\n            }\r\n\r\n            const formattedNew = unvotedNews.map((New) => {\r\n                return {\r\n                    id: New.id,\r\n                    title: New.title,\r\n                    description: New.description,\r\n                    image: New.image,\r\n                    author: New.author,\r\n                    date: new Date(New.date * 1000),\r\n                };\r\n            });\r\n            setNews(formattedNew);\r\n        } catch (err) {\r\n            console.log(`${err.message}`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        checkIfWalletIsConnected();\r\n        getNews();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Header\r\n                currentAccount={currentAccount}\r\n                connectWallet={connectWallet}\r\n            />\r\n            <div>\r\n                {news.map((New, index) => {\r\n                    return (\r\n                        <Link to={`/unvotedNew?id=${New.id}`} key={index}>\r\n                            <div>\r\n                                <NewsList New={New} />\r\n                            </div>\r\n                        </Link>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,EAAD,CAApD;;EAEA,MAAMW,wBAAwB,GAAG,YAAY;IACzC,IAAI;MACA,MAAM;QAAEC;MAAF,IAAeC,MAArB;MAEA,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiB;QAAEC,MAAM,EAAE;MAAV,CAAjB,CAAvB;;MAEA,IAAIF,QAAQ,CAACG,MAAT,KAAoB,CAAxB,EAA2B;QACvB,MAAMC,OAAO,GAAGJ,QAAQ,CAAC,CAAD,CAAxB;QACAJ,iBAAiB,CAACQ,OAAD,CAAjB;QACAC,KAAK,CAAC,sBAAD,CAAL;MACH,CAJD,MAIO;QACHA,KAAK,CAAC,uDAAD,CAAL;MACH;IACJ,CAZD,CAYE,OAAOC,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAa,GAAEF,GAAG,CAACG,OAAQ,EAA3B;IACH;EACJ,CAhBD;;EAkBA,MAAMC,aAAa,GAAG,YAAY;IAC9B,IAAI;MACA,MAAM;QAAEZ;MAAF,IAAeC,MAArB;;MAEA,IAAI,CAACD,QAAL,EAAe;QACXO,KAAK,CAAC,uCAAD,CAAL;QACA;MACH;;MAED,MAAML,QAAQ,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAAiB;QACpCC,MAAM,EAAE;MAD4B,CAAjB,CAAvB;MAGAN,iBAAiB,CAACI,QAAQ,CAAC,CAAD,CAAT,CAAjB;IACH,CAZD,CAYE,OAAOM,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAa,GAAEF,GAAG,CAACG,OAAQ,EAA3B;IACH;EACJ,CAhBD;;EAkBA,MAAME,OAAO,GAAG,YAAY;IACxB,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMrB,WAAW,EAAlC;MACA,MAAMsB,OAAO,GAAG,MAAMD,QAAQ,CAACE,UAAT,EAAtB;MACA,IAAIC,WAAW,GAAG,EAAlB;;MAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACV,MAA5B,EAAoC,EAAEa,CAAtC,EAAyC;QACrC,IAAI,CAACH,OAAO,CAACG,CAAD,CAAP,CAAWC,KAAZ,IAAqB,CAACJ,OAAO,CAACG,CAAD,CAAP,CAAWE,MAAX,CAAkBC,QAAlB,CAA2BxB,cAA3B,CAA1B,EAAsE;UAClEY,OAAO,CAACC,GAAR,CAAYK,OAAO,CAACG,CAAD,CAAP,CAAWE,MAAX,CAAkBE,WAAlB,EAAZ;UACAL,WAAW,CAACM,IAAZ,CAAiBR,OAAO,CAACG,CAAD,CAAxB;QACH;MACJ;;MAED,MAAMM,YAAY,GAAGP,WAAW,CAACQ,GAAZ,CAAiBC,GAAD,IAAS;QAC1C,OAAO;UACHC,EAAE,EAAED,GAAG,CAACC,EADL;UAEHC,KAAK,EAAEF,GAAG,CAACE,KAFR;UAGHC,WAAW,EAAEH,GAAG,CAACG,WAHd;UAIHC,KAAK,EAAEJ,GAAG,CAACI,KAJR;UAKHC,MAAM,EAAEL,GAAG,CAACK,MALT;UAMHC,IAAI,EAAE,IAAIC,IAAJ,CAASP,GAAG,CAACM,IAAJ,GAAW,IAApB;QANH,CAAP;MAQH,CAToB,CAArB;MAUApC,OAAO,CAAC4B,YAAD,CAAP;IACH,CAvBD,CAuBE,OAAOhB,GAAP,EAAY;MACVC,OAAO,CAACC,GAAR,CAAa,GAAEF,GAAG,CAACG,OAAQ,EAA3B;IACH;EACJ,CA3BD;;EA6BAtB,SAAS,CAAC,MAAM;IACZU,wBAAwB;IACxBc,OAAO;EACV,CAHQ,EAGN,EAHM,CAAT;EAKA,oBACI;IAAA,wBACI,QAAC,MAAD;MACI,cAAc,EAAEhB,cADpB;MAEI,aAAa,EAAEe;IAFnB;MAAA;MAAA;MAAA;IAAA,QADJ,eAKI;MAAA,UACKjB,IAAI,CAAC8B,GAAL,CAAS,CAACC,GAAD,EAAMQ,KAAN,KAAgB;QACtB,oBACI,QAAC,IAAD;UAAM,EAAE,EAAG,kBAAiBR,GAAG,CAACC,EAAG,EAAnC;UAAA,uBACI;YAAA,uBACI,QAAC,QAAD;cAAU,GAAG,EAAED;YAAf;cAAA;cAAA;cAAA;YAAA;UADJ;YAAA;YAAA;YAAA;UAAA;QADJ,GAA2CQ,KAA3C;UAAA;UAAA;UAAA;QAAA,QADJ;MAOH,CARA;IADL;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAmBH;;GA7FQxC,G;;KAAAA,G;AA+FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}