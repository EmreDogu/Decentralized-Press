{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Emre\\\\Desktop\\\\Decentralized-Press\\\\decentralized-press\\\\src\\\\WritingPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { create } from \"ipfs-http-client\";\nimport getContract from \"./utilities/getContract\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Writing() {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  const client = create(\"https://ipfs.infura.io:5001/api/v0\");\n  const ImageRef = useRef();\n\n  const handleSubmit = async () => {\n    if (title === \"\" || description === \"\" || image === \"\") {\n      alert(\"All the fields must be filled!\");\n      return;\n    } else {\n      uploadImage(image);\n    }\n  };\n\n  const uploadImage = async image => {\n    alert(\"Uploading Image...\");\n\n    try {\n      const image = await client.add(image);\n      await saveNew(image.path);\n    } catch (err) {\n      error(\"Error While Uploading Image\");\n    }\n  };\n\n  const saveNew = async () => {\n    alert(\"Saving Feed...\");\n    console.log(title, description, image);\n\n    try {\n      const contract = await getContract();\n      const UploadedDate = String(new Date());\n      console.log(contract);\n      /*\r\n       * Save the new feed to the blockchain\r\n       */\n\n      await contract.createNew(title, description, image, UploadedDate);\n      alert(\"New Saved Successfully\"); // reset form\n\n      setTitle(\"\");\n      setDescription(\"\");\n      setImage(\"\"); // Redirect to Home Page\n\n      window.location.href = \"/\";\n    } catch (err) {\n      console.log(err, \"Error Saving Feed\");\n    }\n  }; // Handles redirect to Home Page or previous page\n\n\n  const goBack = () => {\n    window.history.back();\n  };\n\n  return (\n    /*#__PURE__*/\n    //return düzenle\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              goBack();\n            },\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              handleSubmit();\n            },\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Publish\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            placeholder: \"Write your title here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Body\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: description,\n            onChange: e => setDescription(e.target.value),\n            placeholder: \"Write your article here!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => {\n                ImageRef.current.click();\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                onClick: () => {\n                  ImageRef.current.click();\n                },\n                alt: \"image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"hidden\",\n              ref: ImageRef,\n              onChange: e => {\n                setImage(e.target.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_s(Writing, \"s67XHJiA0GmzYrVIsj+0rj6qBEY=\");\n\n_c = Writing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Writing\");","map":{"version":3,"names":["React","useState","useRef","create","getContract","Writing","title","setTitle","description","setDescription","image","setImage","client","ImageRef","handleSubmit","alert","uploadImage","add","saveNew","path","err","error","console","log","contract","UploadedDate","String","Date","createNew","window","location","href","goBack","history","back","e","target","value","current","click","files"],"sources":["C:/Users/Emre/Desktop/Decentralized-Press/decentralized-press/src/WritingPage.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { create } from \"ipfs-http-client\";\r\nimport getContract from \"./utilities/getContract\";\r\n\r\nexport default function Writing() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const client = create(\"https://ipfs.infura.io:5001/api/v0\");\r\n  const ImageRef = useRef();\r\n\r\n  const handleSubmit = async () => {\r\n    if (\r\n      title === \"\" ||\r\n      description === \"\" ||\r\n      image === \"\"\r\n    ) {\r\n      alert(\"All the fields must be filled!\");\r\n      return;\r\n    } else {\r\n      uploadImage(image);\r\n    }\r\n  };\r\n\r\n  const uploadImage = async (image) => {\r\n    alert(\"Uploading Image...\");\r\n\r\n    try {\r\n      const image = await client.add(image);\r\n      await saveNew(image.path);\r\n\r\n    } catch (err) {\r\n      error(\"Error While Uploading Image\");\r\n    }\r\n  };\r\n\r\n  const saveNew = async () => {\r\n    alert(\"Saving Feed...\");\r\n\r\n    console.log(title, description, image);\r\n\r\n    try {\r\n      const contract = await getContract();\r\n      const UploadedDate = String(new Date());\r\n      console.log(contract);\r\n\r\n      /*\r\n       * Save the new feed to the blockchain\r\n       */\r\n      await contract.createNew(\r\n        title,\r\n        description,\r\n        image,\r\n        UploadedDate\r\n      );\r\n\r\n      alert(\"New Saved Successfully\");\r\n\r\n      // reset form\r\n      setTitle(\"\");\r\n      setDescription(\"\");\r\n      setImage(\"\");\r\n\r\n      // Redirect to Home Page\r\n      window.location.href = \"/\";\r\n    } catch (err) {\r\n      console.log(err, \"Error Saving Feed\");\r\n    }\r\n  };\r\n\r\n  // Handles redirect to Home Page or previous page\r\n  const goBack = () => {\r\n    window.history.back();\r\n  };\r\n\r\n  return (\r\n    //return düzenle\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <button\r\n            onClick={() => {\r\n              goBack();\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              handleSubmit();\r\n            }}>\r\n            <p>Publish</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <label>\r\n            Title\r\n          </label>\r\n          <input\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Write your title here!\"\r\n          />\r\n          <label>\r\n            Body\r\n          </label>\r\n          <textarea\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Write your article here!\"\r\n          />\r\n\r\n          <div>\r\n            <label>\r\n              Image\r\n            </label>\r\n            <div\r\n              onClick={() => {\r\n                ImageRef.current.click();\r\n              }}\r\n            >\r\n              <img\r\n                onClick={() => {\r\n                  ImageRef.current.click();\r\n                }}\r\n                alt=\"image\"\r\n              />\r\n            </div>\r\n\r\n            <input\r\n              type=\"file\"\r\n              className=\"hidden\"\r\n              ref={ImageRef}\r\n              onChange={(e) => {\r\n                setImage(e.target.files[0]);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}